services:
  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_PASSWORD=postgrespw
    ports:
      - 5432:5432
    volumes:
      - /var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 5s
      timeout: 5s
      retries: 5
  mongodb:
    image: mongo:latest
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=mongopw
    ports:
      - 27017:27017
    volumes:
      - /var/lib/mongodb/data
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 5s
      retries: 5
  rabbitmq:
    image: rabbitmq:latest
    container_name: rabbitmq
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - 5672:5672
      - 15672:15672
    configs:
      - source: rabbitmq-plugins
        target: /etc/rabbitmq/enabled_plugins
    volumes:
      - /var/lib/rabbitmq/data
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 5s
      timeout: 5s
      retries: 5
  auction-svc:
    image: steffenatil/auction-svc:latest
    build:
      context: .
      dockerfile: ./src/AuctionService/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:80
      RabbitMq__Host: rabbitmq
      ConnectionStrings__DefaultConnection: Server=postgres:5432;User Id=postgres;Password=postgrespw;Database=auctions
      IdentityService__Authority: http://identity-svc
      IdentityService__ValidIssuer: http://localhost:5000
    ports:
      - 7001:80
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
  search-svc:
    image: steffenatil/search-svc:latest
    build:
      context: .
      dockerfile: ./src/SearchService/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:80
      RabbitMq__Host: rabbitmq
      ConnectionStrings__MongoDbConnection: mongodb://root:mongopw@mongodb
      AuctionServiceUrl": http://auction-svc
    ports:
      - 7002:80
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
  identity-svc:
    image: steffenatil/identity-svc:latest
    build:
      context: .
      dockerfile: ./src/IdentityService/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Docker
      ASPNETCORE_URLS: http://+:80
      ConnectionStrings__DefaultConnection: Server=postgres:5432;User Id=postgres;Password=postgrespw;Database=identity
    ports:
      - 5000:80
    depends_on:
      postgres:
        condition: service_healthy
  gateway-svc:
    image: steffenatil/gateway-svc:latest
    build:
      context: .
      dockerfile: ./src/GatewayService/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Docker
      ASPNETCORE_URLS: http://+:80
    ports:
      - 6001:80
configs:
  rabbitmq-plugins:
    content: "[rabbitmq_management]."